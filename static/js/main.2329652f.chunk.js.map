{"version":3,"sources":["components/note.js","components/category.js","components/subcategory.js","components/productline.js","data/products_data.js","App.js","serviceWorker.js","index.js"],"names":["StyledCategorNote","styled","div","Note","props","note","className","CategoryNote","StyledH1","h1","Category","category","name","children","SubCategoryNote","SubCategory","subcategory","StyledProductLine","StyledProductSize","isActive","StyledProductPrice","ProductNote","ProductLine","product","size","price","PRODUCTS_DATA","subcategories","products","id","StyledFixedNav","App","map","c","key","s","p","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2329652f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledCategorNote = styled.div`\ncolor: #a21212;\nfont-size: smaller;\n`;\n\n/** @return {null} */\nexport function Note(props) {\n    const {note, className} = props;\n    if (!note) return null;\n    return <StyledCategorNote className={`note ${className}`}>{note}</StyledCategorNote>\n}","import React from \"react\";\nimport {Note} from \"./note\";\nimport styled from \"@emotion/styled\";\n\nfunction CategoryNote(props) {\n    return <Note note={props.note} className={\"categoryNote\"}/>;\n}\n\nconst StyledH1 = styled.h1`\n            border-top: solid thin;\n            paddig-top: 16px;\n            `;\n\nconst StyledCategorNote = styled.div`\n padding: 0 0 0.5em 0;\n`;\n\nexport function Category(props) {\n    const {category} = props;\n    return <StyledCategorNote>\n        <StyledH1>{category.name}</StyledH1>\n        <CategoryNote note={category.note}/>\n        {props.children}\n    </StyledCategorNote>;\n}","import React from \"react\";\nimport {Note} from \"./note\";\n\nfunction SubCategoryNote(props) {\n    return <Note note={props.note} className={\"categoryNote\"}/>;\n}\n\nexport function SubCategory(props) {\n    const {subcategory} = props;\n    return <div>\n        <h2>{subcategory.name}</h2>\n        <SubCategoryNote note={subcategory.note}/>\n        {props.children}\n    </div>;\n}","import React from \"react\";\nimport {Note} from \"./note\";\nimport styled from \"@emotion/styled\";\n\nconst StyledProductLine = styled.div`\n            display:flex;\n            flex-direction: row;\n            & div {\n            //flex: 1;\n            font-weight: lighter;\n            }\n            `;\n\nconst StyledProductSize = styled.div`\n            color : ${(props) => props.isActive ? \"green\" : \"black\"};\n            font-size: 0.6em;\n            & div {\n            flex: 1;}\n            `;\nconst StyledProductPrice = styled.div`\n            flex: 2;\n            text-align: right;\n            `;\n\nfunction ProductNote(props) {\n    return <Note note={props.note} className={\"productNote\"}/>;\n}\n\nexport function ProductLine(props) {\n    const {product} = props;\n    return <>\n        <StyledProductLine className=\"productLine\">\n            <StyledProductLine>\n                {product.name}\n                {product.size && <StyledProductSize className=\"productSize\"> â€¢ {product.size}CL</StyledProductSize>}\n            </StyledProductLine>\n            <StyledProductPrice>{product.price}&euro;</StyledProductPrice>\n        </StyledProductLine>\n        <ProductNote note={product.note}/>\n    </>;\n}","export const PRODUCTS_DATA = [\n    {\n        name: \"drank\",\n        subcategories: [\n            {\n                name: \"fris\",\n                products: [\n                    {id: \"cola\", name: \"cola\", price: 2},\n                    {id: \"water\", name: \"water\", price: 2},\n                ],\n            },\n            {\n                name: \"alcohol\",\n                products: [\n                    {id: \"bier klein\", name: \"bier\", price: 2, size: 25},\n                    {id: \"bier groot\", name: \"bier\", price: 2.4, size: 33},\n                    {id: \"wijn\", name: \"wijn\", price: 4}\n                ],\n            }]\n    },\n    {\n        name: \"eten\",\n        note: \"voor de snelle honger\",\n        subcategories: [\n            {\n                name: \"hapjes\",\n                note: \"deze kan je altijd bestellen\",\n                products: [\n                    {id: \"chips\", name: \"chips\", price: 1, note: \"paprika of zout\"},\n                    {id: \"olijven\", name: \"olijven\", price: 2, note: \"mix zwart en groen\"},\n                    {id: \"kaas\", name: \"kaas\", price: 4, note: \"mix jonge en oude blokjes\"},\n                    {id: \"salami\", name: \"salami\", price: 3},\n                ]\n            },\n            {\n                name: \"warm\",\n                note: \"niet na 22:00\",\n                products: [\n                    {id: \"hamburger\", name: \"hamburger\", price: 4},\n                    {id: \"pizza\", name: \"pizza\", price: 4}\n                ]\n            }\n        ]\n    }\n];","import React from 'react';\nimport {Category} from \"./components/category\";\nimport {SubCategory} from \"./components/subcategory\";\nimport {ProductLine} from \"./components/productline\";\nimport {PRODUCTS_DATA} from \"./data/products_data\";\nimport styled from '@emotion/styled';\nimport 'normalize.css';\nimport './App.css';\n\n\nconst StyledFixedNav = styled.h1`\n    margin-left: 3vw;\n    margin-right: 2vw;\n    color: white;\n    background-color: black;\n    text-align: center;\n`;\n\nfunction App() {\n    // return (\n    //     <div>\n    //         <small>You are running this application in <b>{process.env.NODE_ENV}</b> mode.</small>\n    //         <form>\n    //             <input type=\"hidden\" defaultValue={process.env.REACT_APP_NOT_SECRET_CODE}/>\n    //         </form>\n    //     </div>\n    // );\n    return (\n        <div>\n\n            <StyledFixedNav>Menu</StyledFixedNav>\n            {PRODUCTS_DATA.map((c) =>\n                <Category key={c.name} category={c}>\n                    {c.subcategories.map((s) =>\n                        <SubCategory key={s.name} subcategory={s}>\n                            {s.products.map((p) =>\n                                <ProductLine key={p.id} product={p}/>)}\n                        </SubCategory>)}\n                </Category>)}\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}